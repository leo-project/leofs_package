# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/6"

  config.vm.synced_folder "./shared", "/home/vagrant/shared", owner: "vagrant", group: "vagrant"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = false
 
    # Customize the amount of memory on the VM:
    vb.memory = "1024"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    ## CentOS/6
    ### Install libraries necessary to build packages for LeoFS
    sudo yum -y install gcc glibc-devel make ncurses-devel openssl-devel autoconf \
                        curl git cmake check check-devel automake systemd-devel \
                        patch gcc-c++ redhat-lsb-core nmap-ncat rpm-build lzo-devel \
                        sysstat wget
    ### Build kerl environment
    curl -O https://raw.githubusercontent.com/kerl/kerl/master/kerl
    chmod a+x kerl
    mkdir -p ~/bin
    mv kerl ~/bin/
    echo "export PATH=$PATH:~/bin" >> ~/.bashrc
    echo 'KERL_CONFIGURE_OPTIONS="--disable-hipe --enable-smp-support --enable-threads --enable-kernel-poll" ' > ~/.kerlrc
    ### Build OTP 19.3 with systemd enabled
    kerl build 19.3 19.3_systemd
    mkdir -p ~/erlang/19.3_systemd
    kerl install 19.3_systemd ~/erlang/19.3_systemd/
    ### Set 19.3 with systemd enabled to the default OTP
    . ~/erlang/19.3_systemd/activate
    ### Build leofs_package environment
    git clone https://github.com/leo-project/leofs_package.git
    mkdir -p ~/rpm/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
    cp leofs_package/rpm/make_rpm.sh ~/rpm/SPECS
    cp leofs_package/rpm/leofs.spec ~/rpm/SPECS
    cp leofs_package/common/check_version.sh ~/rpm/SPECS
    cd ~/rpm/SPECS/
    sh make_rpm.sh 1.4.1
    ### Now we have ~/rpmbuild/RPMS/x86_64/leofs-1.4.1-1.x86_64.rpm
  SHELL
end
